# Default values for datakit.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


#
datakit:
  ## Datakit will send the indicator data to dataway. Please be sure to change the parameters
  ## @param dataway_url - string - optional - default: 'https://guance.com'
  ## The host of the DataKit intake server to send Agent data to, only set this option
  dataway_url: https://aws-openway.guance.com?token=tkn_cef8ee496b014cd4a59b1b470a9c0679
  ## @param global_tags - string - optional - default: 'host=__datakit_hostname,host_ip=__datakit_ip'
  ## It supports filling in global tags in the installation phase. The format example is: Project = ABC, owner = Zhang San (multiple tags are separated by English commas)
  global_tags: host=__datakit_hostname,host_ip=__datakit_ipï¼Œcluster_name_k8s=guance_workshop
  ## @param default_enabled_inputs - string
  ## The default open collector list, format example: input1, input2, input3
  default_enabled_inputs: dk,cpu,disk,diskio,mem,swap,system,hostobject,net,host_processes,container,ebpf,rum,statsd,profile
  ## @param enabled_election - boolean
  ## When the election is enabled, it is enabled by default. If it needs to be enabled, you can give any non empty string value to the environment variable. (e.g. true / false)
  enabled_election: true
  ## @param log - string
  ## Set logging verbosity, valid log levels are:
  ## info, debug, stdout, warn, error, critical, and off
  log_level: info
  ## @param http_listen - string
  ## It supports specifying the network card bound to the Datakit HTTP service in the installation phase (default localhost)
  http_listen: 0.0.0.0:9529


image:
  ## @param repository - string - required
  ## Define the repository to use:
  #
  repository:  pubrepo.guance.com/datakit/datakit

  ## @param tag - string - required
  ## Define the Cluster-Agent version to use.
  #
  tag: ""

  ## @param pullPolicy - string - optional
  ## The Kubernetes [imagePullPolicy][] value
  #
  pullPolicy: Always

# https://docs.guance.com/datakit/datakit-daemonset-deploy/

git_repos:
  # use git management DataKit input
  enable: false

  ## @param git_url - string - required
  ## You Can Set git@github.com:path/to/repository.git or http://username:password@github.com/path/to/repository.git.
  ## see https://docs.guance.com/best-practices/insight/datakit-daemonset/#git
  git_url: "-"
  ## @param git_key_path - string - optional
  ## The Git Ssh Key Content,
  ## For details,
  ## -----BEGIN OPENSSH PRIVATE KEY--
  ## ---xxxxx---
  ##--END OPENSSH PRIVATE KEY-----
  git_key_path: "-"
  ## @param git_key_pw - string - optional
  ## The ssh Key Password
  git_key_pw: "-"
  ## @param git_url - string - required
  ## Specifies the branch to pull. If it is blank, it is the default. The default is the main branch specified remotely, usually the master.
  git_branch: "master"
  ## @param git_url - string - required
  ## Timed pull interval. (e.g. 1m)
  git_interval: "1m"
  is_use_key: false

## If true, Datakit install ipdb.
## ref: https://docs.guance.com/datakit/datakit-tools-how-to/#install-ipdb
iploc:
  enable: false
  image:
    ## @param repository - string - required
    ## Define the repository to use:
    #
    repository: "pubrepo.jiagouyun.com/datakit/iploc"

    ## @param tag - string - required
    ## Define the Cluster-Agent version to use.
    #
    tag: "1.0"


## @param extraEnvs - array - optional
## extra env Add env for customization
## more, see: https://docs.guance.com/datakit/datakit-daemonset-deploy/#using-k8-env
## You can add more than one parameter
extraEnvs:
  - name: ENV_NAMESPACE # electoral
    value: guance-workshop
  - name: ENV_GLOBAL_ELECTION_TAGS
    value: "cluster_name_k8s=guance-workshop"
#  - name: ENV_DEFAULT_ENABLED_INPUTS
#    value: "dk,cpu,disk,diskio,mem,swap,system,hostobject,net,host_processes,container,ebpf,rum,statsd,profile"

#  - name: "NODE_OPTIONS"
#    value: "--max-old-space-size=1800"


resources:
  requests:
    cpu: "200m"
    memory: "128Mi"
  limits:
    cpu: "2000m"
    memory: "4Gi"

## @param nameOverride - string - optional
## Override name of app.
#
nameOverride: ""

## @param fullnameOverride - string - optional
## Override name of app.
#
fullnameOverride: ""


podAnnotations:
  datakit/logs: |
    [{"disable": true}]

## @param tolerations - array - optional
## Allow the DaemonSet to schedule on tainted nodes (requires Kubernetes >= 1.6)
#
tolerations:
  - operator: Exists

service:
  type: ClusterIP
  port: 9529

## @param dkconfig - array - optional
## Configure Datakit custom input
#
dkconfig:
  - path: "/usr/local/datakit/conf.d/container/container.conf"
    name: container.conf
    value: |
      [[inputs.container]]
        docker_endpoint = "unix:///var/run/docker.sock"
        containerd_address = "/var/run/containerd/containerd.sock"

        enable_container_metric = true
        enable_k8s_metric = true
        enable_pod_metric = true

        ## Containers logs to include and exclude, default collect all containers. Globs accepted.
        container_include_log = []
        container_exclude_log = ["image:pubrepo.jiagouyun.com/datakit/logfwd*", "image:pubrepo.jiagouyun.com/datakit/datakit*"]

        exclude_pause_container = true

        ## Removes ANSI escape codes from text strings
        logging_remove_ansi_escape_codes = false

        kubernetes_url = "https://kubernetes.default:443"

        ## Authorization level:
        ##   bearer_token -> bearer_token_string -> TLS
        ## Use bearer token for authorization. ('bearer_token' takes priority)
        ## linux at:   /run/secrets/kubernetes.io/serviceaccount/token
        ## windows at: C:\var\run\secrets\kubernetes.io\serviceaccount\token
        bearer_token = "/run/secrets/kubernetes.io/serviceaccount/token"
        # bearer_token_string = "<your-token-string>"

        [inputs.container.tags]
          # some_tag = "some_value"
          # more_tag = "some_other_value"
#  - path: "/usr/local/datakit/conf.d/db/mysql.conf"
#    name: mysql.conf
#    value: |
#      # {"version": "1.1.9-rc7.1", "desc": "do NOT edit this line"}
#      [[inputs.mysql]]
#        host = "192.168.0.3"
#        user = "root"
#        pass = "S6QgMvrer2!8xvMD"
#        port = 3306
#        interval = "10s"
#        innodb = true
#        tables = []
#        users = []
#        [inputs.mysql.dbm_metric]
#          enabled = true
#        [inputs.mysql.dbm_sample]
#          enabled = true
#        [inputs.mysql.tags]
#          # some_tag = "some_value"
#          # more_tag = "some_other_value"
#
#end

## If true, deploys the kube-state-metrics deployment.
## ref: https://github.com/kubernetes/charts/tree/master/stable/kube-state-metrics
kubeStateMetricsEnabled: true

## If true, deploys the metrics-server deployment.
## ref: https://github.com/kubernetes-sigs/metrics-server/tree/master/charts/metrics-server
MetricsServerEnabled: false


